<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->   

    <!--寫入File , 記錄的檔名是依據logger的名稱[即Logger Class的名稱]，資料則會依據自訂的layout格式來寫入文字檔中。-->
    <!--<target name="file" xsi:type="File" fileName="${basedir}../../App_Data/Logs/${shortdate}/${logger}.txt"
          layout="${longdate} | ${level:uppercase=true} | ${logger} | ${message} ${newline}" />-->
    <target name="file" xsi:type="File" fileName="${basedir}../../App_Data/Logs/${shortdate}/${logger}.txt"
        layout="${message}" />
    
    <!--記錄的名稱為固定的FatalFile.txt，因為Fatal屬於使系統足以致命的錯誤，足以影響系統的運作，
        所以用一個固定的名稱，讓開發者或是維護人員在檢視log時可以馬上看到，資料則會依據自訂的layout格式來寫入文字檔中。-->
    <target name="FatalFile" xsi:type="File" fileName="${basedir}/App_Data/Logs/${shortdate}/FatalFile.txt"
        layout="${longdate} | ${level:uppercase=true} | ${logger} | ${message} ${newline}" />

    <!--這是要把Log給記錄到作業系統的Event Log（事件檢視器）中，-->
    <target name="eventlog" xsi:type="EventLog"
        source="Lab_Of_NLog" log="Application"
        layout="${date}: ${message} ${stacktrace}" />


    <!--
        ${basedir}：代表網站根目錄 (或應用程式所在目錄)；The current application domain's base directory.
        ${shortdate}：短日期格式，The short date in a sortable format yyyy-MM-dd.
        ${longdate}：長日期格式，The date and time in a long, sortable format yyyy-MM-dd HH:mm:ss.mmm.
        ${logger}：The logger name.記錄器名稱.
        ${level:uppercase=true}：The log level，Log的等級，而中間uppercase=true就是把等級的文字轉為大寫.
        ${message}：Log的訊息內容，The formatted log message.
        ${newline}：新行符號，A newline literal.
        ${stacktrace}：Stack trace renderer，如錯誤的堆疊訊息內容。
    -->
  </targets>

  <rules>
    <!-- add your logging rules here -->
    <!--
    <logger name="*" minlevel="Trace" writeTo="f" />
    -->
    <!--   -->
    <logger name="*" level="Trace" writeTo="file" />
    <logger name="*" level="Debug" writeTo="file" />
    <logger name="*" level="Info" writeTo="file" />
    <logger name="*" level="Warn" writeTo="file" />

    <logger name="*" level="Fatal" writeTo="FatalFile" />
    <logger name="*" level="Fatal" writeTo="eventlog" />

    <!--Rules的各種屬性說明如下：

        name – source/logger name (may include wildcard characters *)
        minlevel – minimal log level for this rule to match
        maxlevel – maximum log level for this rule to match
        level – single log level for this rule to match
        levels - comma separated list of log levels for this rule to match
        writeTo – comma separated list of target that should be written to when this rule matches.
        final – make this rule final. No further rules are processed when any final rule matches.
    -->
    
    <!--
        依據NLog提供的六種不同等級來各自定義處理方式，六種等級的說明如下：

        Trace：用於追蹤，可以在程式裡需要追蹤的地方將訊息以Trace傳出。
        Debug：用於開發，於開發時將一些需要特別關注的訊息以Debug傳出。
        Info：訊息，記錄不影響系統執行的訊息，通常會記錄登入登出或是資料的建立刪除、傳輸等。
        Warn：警告，用於需要提示的訊息，例如庫存不足、貨物超賣、餘額即將不足等。
        Error：錯誤，記錄系統實行所發生的錯誤，例如資料庫錯誤、遠端連線錯誤、發生例外等。
        Fatal：致命，用來記錄會讓系統無法執行的錯誤，例如資料庫無法連線、重要資料損毀等。
    -->
  </rules>
</nlog>
